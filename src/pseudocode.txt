Card
	Fields:
	- String suitStr
	- String rankStr
	- int suitInt
	- int rankInt
	
	Constructors:
	- Card (no params) 
		set fields to defaults
	  
	- Card (String suit, String rank) 
		set corresponding fields
		convert to ints
		set int fields
	  
	- Card (String suit, int rank) 
		set corresponding fields
		convert to other types
		set other fields
	  
	- Card (int Suit, String rank)
		set corresponding fields
		convert to other types
		set other fields
	
	Getters:
	- String getSuitStr()
		return suit as string
	- String getRankStr()
		return rank as string
	- int getSuitInt()
		return suit as int
	- int getRankInt()
		return rank as int
		
	Methods:
	- int compareTo(Card other)
		return 0 if this card equals other
		return int difference between this card and other's rank
	- boolean equals(Card other)
		return true if this card equals other (suit and rank)
	- String toString()
		return "[rank] of [suit]"
		
Card Comparator
	- compare(card1, card2)
		return int difference between rank of card1 and card2

Deck
	Fields:
	- Card[] deck
	- int top // index of last card in deck
	
	Constructors:
	- Deck()
		create deck
		sort cards by suit and rank
	- Deck(boolean sorted)
		create deck
		sort cards if sorted == true, shuffle if sorted == false
			// can do: new Deck() and then shuffle()
		
	Methods:
	- String toString()
		if deck.length == 52
			print cards in 4 columns by suit
		if deck.length != 52
			print cards in 1 column
	- void shuffle()
		use Math.random twice to select random cards and switch them
		repeat multiple times
	- boolean equals(Deck other)
		iterate through this deck
		compare this deck's cards to other's cards
	- Card[] deal(int hands, int cardsPerHand)
		remove (hands*cardsPerHand) number of cards from deck
		return hands number of decks with cardsPerHand cards in each
		if deck != hands*cards
			return null
	- Card pick()
		removes and returns random card
		// can use Math.random
	- selectionSort()
		perform a selection sort on this deck
	- mergeSort()
		perform a merge sort on this deck
	
		
		
	
